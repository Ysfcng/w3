import { HttpAgent } from "@dfinity/agent";
import type { CanisterId, CandidAdapterParameters, CandidDefenition, ReactorParser } from "../../types";
export declare class CandidAdapter {
    agent: HttpAgent;
    didjsCanisterId: string;
    private parserModule?;
    unsubscribeAgent: () => void;
    constructor({ agentManager, agent, didjsCanisterId, }: CandidAdapterParameters);
    initializeParser(module?: ReactorParser): Promise<void>;
    private getDefaultDidJsId;
    fetchCandidDefinition(canisterId: CanisterId): Promise<string>;
    getCandidDefinition(canisterId: CanisterId): Promise<CandidDefenition>;
    getFromMetadata(canisterId: CanisterId): Promise<string | undefined>;
    getFromTmpHack(canisterId: CanisterId): Promise<string>;
    dynamicEvalJs(data: string): Promise<CandidDefenition>;
    fetchDidTojs(candidSource: string, didjsCanisterId?: string): Promise<[string]>;
    parseDidToJs(candidSource: string): string;
}
