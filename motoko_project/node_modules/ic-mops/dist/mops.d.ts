import { Identity } from '@dfinity/agent';
import { Config } from './types.js';
import { mainActor, storageActor } from './api/actors.js';
import { getNetwork } from './api/network.js';
import { getHighestVersion } from './api/getHighestVersion.js';
export declare let apiVersion: string;
export declare let globalConfigDir: string;
export declare let globalCacheDir: string;
export declare function getNetworkFile(): string | URL;
export declare function setNetwork(network: string): void;
export declare let getIdentity: () => Promise<Identity | undefined>;
export declare function getClosestConfigFile(dir?: string): string;
export declare function getRootDir(): string;
export declare function checkConfigFile(): boolean;
export declare function progressBar(step: number, total: number): string;
export declare function parseGithubURL(href: string): {
    org: string;
    gitName: string;
    branch: string;
    commitHash: string;
};
export declare function getGithubCommit(repo: string, ref: string): Promise<any>;
export declare function getDependencyType(version: string): "local" | "mops" | "github";
export declare function readConfig(configFile?: string): Config;
export declare function writeConfig(config: Config, configFile?: string): void;
export declare function formatDir(name: string, version: string): string;
export declare function formatGithubDir(name: string, repo: string): string;
export declare function readDfxJson(): any;
export declare function checkApiCompatibility(): Promise<boolean>;
export { getNetwork, mainActor, storageActor, getHighestVersion, };
