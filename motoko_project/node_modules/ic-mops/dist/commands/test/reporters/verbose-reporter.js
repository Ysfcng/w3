var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var _VerboseReporter_startTime, _VerboseReporter_curFileIndex;
import chalk from 'chalk';
import { absToRel } from '../utils.js';
export class VerboseReporter {
    constructor() {
        this.passed = 0;
        this.failed = 0;
        this.skipped = 0;
        _VerboseReporter_startTime.set(this, Date.now());
        _VerboseReporter_curFileIndex.set(this, 0);
    }
    addFiles(files) {
        console.log('Test files:');
        for (let file of files) {
            console.log(chalk.gray(`â€¢ ${absToRel(file)}`));
        }
        console.log('='.repeat(50));
    }
    addRun(file, mmf, state, wasiMode) {
        state.then(() => {
            var _a, _b;
            this.passed += mmf.passed;
            this.failed += mmf.failed;
            this.skipped += mmf.skipped;
            if (mmf.passed === 0 && mmf.failed === 0) {
                this.passed++;
            }
            (__classPrivateFieldSet(this, _VerboseReporter_curFileIndex, (_b = __classPrivateFieldGet(this, _VerboseReporter_curFileIndex, "f"), _a = _b++, _b), "f"), _a) && console.log('-'.repeat(50));
            console.log(`Running ${chalk.gray(absToRel(file))} ${wasiMode ? chalk.gray('(wasi)') : ''}`);
            mmf.flush();
        });
    }
    done() {
        console.log('='.repeat(50));
        if (this.failed) {
            console.log(chalk.redBright('Tests failed'));
        }
        else {
            console.log(chalk.greenBright('Tests passed'));
        }
        console.log(`Done in ${chalk.gray(((Date.now() - __classPrivateFieldGet(this, _VerboseReporter_startTime, "f")) / 1000).toFixed(2) + 's')}`
            + `, passed ${chalk.greenBright(this.passed)}`
            + (this.skipped ? `, skipped ${chalk[this.skipped ? 'yellowBright' : 'gray'](this.skipped)}` : '')
            + (this.failed ? `, failed ${chalk[this.failed ? 'redBright' : 'gray'](this.failed)}` : ''));
        return this.failed === 0;
    }
}
_VerboseReporter_startTime = new WeakMap(), _VerboseReporter_curFileIndex = new WeakMap();
