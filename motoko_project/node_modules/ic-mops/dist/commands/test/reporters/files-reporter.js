var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _FilesReporter_startTime;
import chalk from 'chalk';
import { absToRel } from '../utils.js';
export class FilesReporter {
    constructor() {
        this.passed = 0;
        this.failed = 0;
        this.skipped = 0;
        _FilesReporter_startTime.set(this, Date.now());
    }
    addFiles(files) {
        console.log(`Test files: ${files.length}`);
        console.log('='.repeat(50));
    }
    addRun(file, mmf, state, wasiMode) {
        state.then(() => {
            this.passed += Number(mmf.failed === 0);
            this.failed += Number(mmf.failed !== 0);
            this.skipped += mmf.skipped;
            if (mmf.failed) {
                console.log(chalk.red('✖'), absToRel(file));
                mmf.flush('fail');
                console.log('-'.repeat(50));
            }
            else {
                console.log(`${chalk.green('✓')} ${absToRel(file)} ${wasiMode ? chalk.gray('(wasi)') : ''}`);
            }
        });
    }
    done() {
        console.log('='.repeat(50));
        if (this.failed) {
            console.log(chalk.redBright('Tests failed'));
        }
        else {
            console.log(chalk.greenBright('Tests passed'));
        }
        console.log(`Done in ${chalk.gray(((Date.now() - __classPrivateFieldGet(this, _FilesReporter_startTime, "f")) / 1000).toFixed(2) + 's')}`
            + `, passed ${chalk.greenBright(this.passed)} files`
            + (this.skipped ? `, skipped ${chalk[this.skipped ? 'yellowBright' : 'gray'](this.skipped)} cases` : '')
            + (this.failed ? `, failed ${chalk[this.failed ? 'redBright' : 'gray'](this.failed)} files` : ''));
        return this.failed === 0;
    }
}
_FilesReporter_startTime = new WeakMap();
