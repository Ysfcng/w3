type Strategy = 'store' | 'print';
type TestStatus = 'pass' | 'fail' | 'skip';
type MessageType = 'pass' | 'fail' | 'skip' | 'suite' | 'stdout';
export declare class MMF1 {
    file: string;
    stack: string[];
    currSuite: string;
    failed: number;
    passed: number;
    skipped: number;
    srategy: Strategy;
    output: {
        type: MessageType;
        message: string;
    }[];
    nestingSymbol: string;
    passedNamesFlat: string[];
    constructor(srategy: Strategy, file: string);
    _log(type: MessageType, ...args: string[]): void;
    flush(messageType?: MessageType): void;
    parseLine(line: string): void;
    _testStart(name: string): void;
    _testEnd(name: string): void;
    _testSkip(name: string): void;
    _status(name: string, status: TestStatus): void;
    fail(stderr: string): void;
    pass(): void;
}
export {};
